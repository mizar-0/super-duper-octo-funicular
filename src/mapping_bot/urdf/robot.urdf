<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from robot.xacro                    | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!--  TWO WHEELED DIFFERENTIAL DRIVE ROBOT -->
<!--  -->
<!--  -->
<!--  -->
<robot name="mapping_bot">
  <!-- MATERIALS -->
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="gray">
    <color rgba="0.7 0.7 0.7 1.0"/>
  </material>
  <material name="darkgray">
    <color rgba="0.3 0.3 0.3 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <material name="yellow">
    <color rgba="0.8 0.8 0.0 1.0"/>
  </material>
  <!--mu1 mu2 are friction coefficients-->
  <gazebo reference="body_link">
    <mu1>2</mu1>
    <mu2>2</mu2>
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="wheel1_link">
    <mu1>2</mu1>
    <mu2>2</mu2>
    <material>Gazebo/Yellow</material>
  </gazebo>
  <gazebo reference="wheel2_link">
    <mu1>2</mu1>
    <mu2>2</mu2>
    <material>Gazebo/Yellow</material>
  </gazebo>
  <gazebo reference="castor_link">
    <mu1>0.0002</mu1>
    <mu2>0.0002</mu2>
    <material>Gazebo/Blue</material>
  </gazebo>
  <!-- DIFFERENTIAL DRIVE GAZEBO PLUGIN -->
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <!-- Plugin update rate in Hz -->
      <updateRate>100</updateRate>
      <!-- Name of left joint, defaults to `left_joint` -->
      <leftJoint>wheel2_joint</leftJoint>
      <!-- Name of right joint, defaults to `right_joint` -->
      <rightJoint>wheel1_joint</rightJoint>
      <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
      <wheelSeparation>0.7</wheelSeparation>
      <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
      <wheelDiameter>0.3</wheelDiameter>
      <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
      <wheelAcceleration>7</wheelAcceleration>
      <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
      <wheelTorque>1000</wheelTorque>
      <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
      <commandTopic>cmd_vel</commandTopic>
      <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
      <odometryTopic>odom</odometryTopic>
      <!-- Odometry frame, defaults to `odom` -->
      <odometryFrame>odom</odometryFrame>
      <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
      <robotBaseFrame>dummy</robotBaseFrame>
      <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
      <odometrySource>1</odometrySource>
      <!-- Set to true to publish transforms for the wheel links, defaults to false -->
      <publishWheelTF>true</publishWheelTF>
      <!-- Set to true to publish transforms for the odometry, defaults to true -->
      <publishOdom>true</publishOdom>
      <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
      <publishWheelJointState>true</publishWheelJointState>
      <!-- Set to true to swap right and left wheels, defaults to true -->
      <legacyMode>false</legacyMode>
      <covariance_x>0.0001</covariance_x>
      <covariance_y>0.0001</covariance_y>
      <covariance_yaw>0.01</covariance_yaw>
    </plugin>
  </gazebo>
  <!-- LASER SCANNER GAZEBO PLUGIN-->
  <gazebo reference="laser_link">
    <mu1>2</mu1>
    <mu2>2</mu2>
    <material>Gazebo/Blue</material>
    <sensor name="laser_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>400</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.57079</min_angle>
            <max_angle>1.57079</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
             achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
             stddev of 0.01m will put 99.7% of samples within 0.03m of the true
             reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>laser_scan</topicName>
        <frameName>laser_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- IMU SENSOR GAZEBO PLUGIN -->
  <!--
  <gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>dummy</bodyName>
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>20.0</updateRate>
    </plugin>
  </gazebo>

-->
  <gazebo reference="imu_link">
    <mu1>2</mu1>
    <mu2>2</mu2>
    <material>Gazebo/Blue</material>
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>false</visualize>
      <topic>_default_topic_</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>robby</bodyName>
        <!--this is the model name of the model to which the plugin will be attached-->
        <updateRateHZ>100.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>
  <!-- CAMERA SENSOR GAZEBO PLUGIN -->
  <!-- <gazebo reference="camera_optical_link">
  <material>Gazebo/Red</material>
    <sensor name="camera" type="camera">
      <update_rate>30.0</update_rate>
      <camera>
        <horizontal_fov>1.089</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>30</updateRate>
        <cameraName>camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_optical_link</frameName>
      </plugin>
    </sensor>
  </gazebo> -->
  <!-- RGBD CAMERA GAZEBO PLUGIN -->
  <gazebo reference="camera_optical_link">
    <material>Gazebo/Red</material>
    <sensor name="rgbd_camera" type="depth">
      <update_rate>20</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>3</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="rgbd_controller">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>rgbd</cameraName>
        <imageTopicName>/rgbd/color/image_raw</imageTopicName>
        <cameraInfoTopicName>/rgbd/color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/rgbd/depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>/rgbd/depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>/rgbd/depth/points</pointCloudTopicName>
        <frameName>camera_optical_link</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
  <!-- -->
  <!-- DEFINITION OF LINKS AND JOINTS -->
  <!--DUMMY LINK AND JOINT -->
  <link name="dummy">
</link>
  <joint name="dummy_joint" type="fixed">
    <parent link="dummy"/>
    <child link="body_link"/>
  </joint>
  <!-- BODY LINK -->
  <link name="body_link">
    <visual>
      <geometry>
        <box size="1.0 0.6 0.3"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="red"/>
    </visual>
    <collision>
      <geometry>
        <box size="1.0 0.6 0.3"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="487.79999999999995"/>
      <inertia ixx="18.292499999999993" ixy="0" ixz="0" iyy="44.308499999999995" iyz="0" izz="55.283999999999985"/>
    </inertial>
  </link>
  <!-- END BODY LINK -->
  <!-- BACK RIGHT WHEEL LINK AND JOINT -->
  <joint name="wheel1_joint" type="continuous">
    <parent link="body_link"/>
    <child link="wheel1_link"/>
    <origin rpy="0 0 0" xyz="-0.3 -0.35 -0.1"/>
    <axis xyz="0 1 0"/>
    <limit effort="1000" velocity="1000"/>
    <dynamics damping="1.0" friction="2.0"/>
  </joint>
  <link name="wheel1_link">
    <visual>
      <geometry>
        <cylinder length="0.1" radius="0.15"/>
      </geometry>
      <origin rpy="1.57079633 0 0" xyz="0 0 0"/>
      <material name="yellow"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.1" radius="0.15"/>
      </geometry>
      <origin rpy="1.57079633 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="19.155861205265023"/>
      <inertia ixx="0.12371493695066992" ixy="0" ixz="0" iyy="0.12371493695066992" iyz="0" izz="0.21550343855923149"/>
    </inertial>
  </link>
  <!-- BACK LEFT WHEEL LINK AND JOINT -->
  <joint name="wheel2_joint" type="continuous">
    <parent link="body_link"/>
    <child link="wheel2_link"/>
    <origin rpy="0 0 0" xyz="-0.3 0.35 -0.1"/>
    <axis xyz="0 1 0"/>
    <limit effort="1000" velocity="1000"/>
    <dynamics damping="1.0" friction="2.0"/>
  </joint>
  <link name="wheel2_link">
    <visual>
      <geometry>
        <cylinder length="0.1" radius="0.15"/>
      </geometry>
      <origin rpy="1.57079633 0 0" xyz="0 0 0"/>
      <material name="yellow"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.1" radius="0.15"/>
      </geometry>
      <origin rpy="1.57079633 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="19.155861205265023"/>
      <inertia ixx="0.12371493695066992" ixy="0" ixz="0" iyy="0.12371493695066992" iyz="0" izz="0.21550343855923149"/>
    </inertial>
  </link>
  <!-- CASTOR WHEEL JOINT AND LINK-->
  <joint name="castor_joint" type="fixed">
    <parent link="body_link"/>
    <child link="castor_link"/>
    <origin rpy="0 0 0" xyz="0.3 0 -0.1"/>
  </joint>
  <link name="castor_link">
    <visual>
      <geometry>
        <sphere radius="0.15"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.15"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="38.311722410530045"/>
      <inertia ixx="0.3448055016947704" ixy="0" ixz="0" iyy="0.3448055016947704" iyz="0" izz="0.3448055016947704"/>
    </inertial>
  </link>
  <!-- CASTOR LINK END -->
  <!-- LASER LINK AND JOINT -->
  <joint name="laser_joint" type="fixed">
    <parent link="body_link"/>
    <child link="laser_link"/>
    <origin rpy="0 0 0" xyz="0.4 0 0.175"/>
  </joint>
  <link name="laser_link">
    <visual>
      <geometry>
        <cylinder length="0.05" radius="0.05"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.05" radius="0.05"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1.0642145114036126"/>
      <inertia ixx="0.0008868454261696774" ixy="0" ixz="0" iyy="0.0008868454261696774" iyz="0" izz="0.0013302681392545158"/>
    </inertial>
    <!-- this macro is for the wheel. since the laser has different dimensions, it isn't an accurate model. but it works-->
  </link>
  <!--LASER LINK END-->
  <!-- IMU LINK AND JOINT -->
  <joint name="imu_joint" type="fixed">
    <parent link="body_link"/>
    <child link="imu_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.175"/>
  </joint>
  <link name="imu_link">
    <visual>
      <geometry>
        <cylinder length="0.05" radius="0.05"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="gray"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.05" radius="0.05"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1.0642145114036126"/>
      <inertia ixx="0.0008868454261696774" ixy="0" ixz="0" iyy="0.0008868454261696774" iyz="0" izz="0.0013302681392545158"/>
    </inertial>
    <!-- this macro is for the wheel. since the laser has different dimensions, it isn't an accurate model. but it works-->
  </link>
  <!-- IMU LINK AND JOINT END-->
  <!-- CAMERA LINK AND JOINT -->
  <joint name="camera_joint" type="fixed">
    <parent link="body_link"/>
    <child link="camera_link"/>
    <origin rpy="0 1.57079 0" xyz="0.525 0 0.09999999999999999"/>
  </joint>
  <link name="camera_link">
    <visual>
      <geometry>
        <cylinder length="0.05" radius="0.05"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="yellow"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.05" radius="0.05"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1.0642145114036126"/>
      <inertia ixx="0.0008868454261696774" ixy="0" ixz="0" iyy="0.0008868454261696774" iyz="0" izz="0.0013302681392545158"/>
    </inertial>
    <!-- this macro is for the wheel. since the laser has different dimensions, it isn't an accurate model. but it works-->
  </link>
  <!-- CAMERA LINK AND JOINT END-->
  <joint name="camera_optical_joint" type="fixed">
    <parent link="camera_link"/>
    <child link="camera_optical_link"/>
    <origin rpy="-1.57079 -1.57079 1.57079" xyz="0 0 0"/>
  </joint>
  <link name="camera_optical_link">
</link>
  <!-- CAMERA LINK AND JOINT END-->
</robot>
